[{"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\index.js":"1","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\App.js":"2","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\store.js":"4","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Header.js":"6","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProfileScreen.js":"7","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\CartScreen.js":"8","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\LoginScreen.js":"11","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ShippingScreen.js":"12","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\PaymentScreen.js":"13","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\OrderScreen.js":"14","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","C:\\Users\\goveewr\\Desktop\\petshop-react-app\\frontend\\src\\screens\\UserListScreen.js":"16","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\OrderListScreen.js":"17","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\UserEditScreen.js":"18","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SlideEditScreen.js":"19","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SlidesListScreen.js":"20","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerVerificationScreen.js":"21","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\RegisterSellerScreen.js":"22","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerScreen.js":"23","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerProductEditScreen.js":"24","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProductListScreen.js":"25","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\productReducers.js":"26","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProductEditScreen.js":"27","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\cartReducers.js":"28","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\orderRedusers.js":"29","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\sliderReducers.js":"30","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerProfileScreen.js":"31","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\userReducers.js":"32","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Message.js":"33","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Loader.js":"34","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Rating.js":"35","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Alert.js":"36","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\SearchBox.js":"37","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\DarkToggle.js":"38","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Product.js":"39","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\FormContainer.js":"40","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Paginate.js":"41","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\userActions.js":"42","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\orderActions.js":"43","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\productActions.js":"44","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\cartActions.js":"45","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\userConstants.js":"46","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\cartConstants.js":"47","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\productConstans.js":"48","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\sliderConstants.js":"49","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\orderConstants.js":"50","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\sliderActions.js":"51","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\CheckoutSteps.js":"52","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\ProductCarousel.js":"53","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\AboutUs.js":"54"},{"size":610,"mtime":1612953666413,"results":"55","hashOfConfig":"56"},{"size":4025,"mtime":1613674575778,"results":"57","hashOfConfig":"56"},{"size":5227,"mtime":1612953667024,"results":"58","hashOfConfig":"56"},{"size":2977,"mtime":1613557008318,"results":"59","hashOfConfig":"56"},{"size":328,"mtime":1612953666298,"results":"60","hashOfConfig":"56"},{"size":3901,"mtime":1613674126189,"results":"61","hashOfConfig":"56"},{"size":6543,"mtime":1612953666784,"results":"62","hashOfConfig":"56"},{"size":4204,"mtime":1612953666644,"results":"63","hashOfConfig":"56"},{"size":13835,"mtime":1613673266018,"results":"64","hashOfConfig":"56"},{"size":3270,"mtime":1612953666645,"results":"65","hashOfConfig":"56"},{"size":2497,"mtime":1612953666670,"results":"66","hashOfConfig":"56"},{"size":2685,"mtime":1612953666900,"results":"67","hashOfConfig":"56"},{"size":1968,"mtime":1612953666776,"results":"68","hashOfConfig":"56"},{"size":8155,"mtime":1613671707015,"results":"69","hashOfConfig":"56"},{"size":5893,"mtime":1612953666778,"results":"70","hashOfConfig":"56"},{"size":3449,"mtime":1612953667022,"results":"71","hashOfConfig":"56"},{"size":2588,"mtime":1612953666710,"results":"72","hashOfConfig":"56"},{"size":7263,"mtime":1612953666967,"results":"73","hashOfConfig":"56"},{"size":5363,"mtime":1612953666901,"results":"74","hashOfConfig":"56"},{"size":3780,"mtime":1612953666903,"results":"75","hashOfConfig":"56"},{"size":1141,"mtime":1612953666897,"results":"76","hashOfConfig":"56"},{"size":6605,"mtime":1612953666785,"results":"77","hashOfConfig":"56"},{"size":4859,"mtime":1613636899531,"results":"78","hashOfConfig":"56"},{"size":6172,"mtime":1612953666786,"results":"79","hashOfConfig":"56"},{"size":4141,"mtime":1612953666781,"results":"80","hashOfConfig":"56"},{"size":4878,"mtime":1613654009601,"results":"81","hashOfConfig":"56"},{"size":11366,"mtime":1613647157012,"results":"82","hashOfConfig":"56"},{"size":1302,"mtime":1612953666598,"results":"83","hashOfConfig":"56"},{"size":3508,"mtime":1612953666599,"results":"84","hashOfConfig":"56"},{"size":2539,"mtime":1612953666602,"results":"85","hashOfConfig":"56"},{"size":1397,"mtime":1612953666840,"results":"86","hashOfConfig":"56"},{"size":4785,"mtime":1613557109827,"results":"87","hashOfConfig":"56"},{"size":594,"mtime":1612953666303,"results":"88","hashOfConfig":"56"},{"size":405,"mtime":1612953666302,"results":"89","hashOfConfig":"56"},{"size":1519,"mtime":1612953666307,"results":"90","hashOfConfig":"56"},{"size":250,"mtime":1612953666239,"results":"91","hashOfConfig":"56"},{"size":823,"mtime":1612953666348,"results":"92","hashOfConfig":"56"},{"size":925,"mtime":1612953666297,"results":"93","hashOfConfig":"56"},{"size":834,"mtime":1613652907542,"results":"94","hashOfConfig":"56"},{"size":347,"mtime":1612953666299,"results":"95","hashOfConfig":"56"},{"size":778,"mtime":1612953666304,"results":"96","hashOfConfig":"56"},{"size":9229,"mtime":1613557885536,"results":"97","hashOfConfig":"56"},{"size":5209,"mtime":1612953666017,"results":"98","hashOfConfig":"56"},{"size":8163,"mtime":1613652780802,"results":"99","hashOfConfig":"56"},{"size":1255,"mtime":1612953666016,"results":"100","hashOfConfig":"56"},{"size":2012,"mtime":1613556961520,"results":"101","hashOfConfig":"56"},{"size":290,"mtime":1612953666351,"results":"102","hashOfConfig":"56"},{"size":2052,"mtime":1613557567180,"results":"103","hashOfConfig":"56"},{"size":984,"mtime":1612953666354,"results":"104","hashOfConfig":"56"},{"size":1264,"mtime":1612953666352,"results":"105","hashOfConfig":"56"},{"size":3438,"mtime":1612953666017,"results":"106","hashOfConfig":"56"},{"size":1309,"mtime":1612953666296,"results":"107","hashOfConfig":"56"},{"size":1621,"mtime":1612953666306,"results":"108","hashOfConfig":"56"},{"size":729,"mtime":1613675275728,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1jngg0s",{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"112"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\index.js",[],["232","233"],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\App.js",["234","235","236","237","238","239"],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\store.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Header.js",["240"],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProfileScreen.js",["241","242","243","244","245"],"import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col, ListGroup } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Rating from '../components/Rating'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { product } = productDetails\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Профиль</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Имя</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Введите имя'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Введите email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Пароль</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Введите пароль'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Подтвердить пароль</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Подтвердите пароль'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Обновить\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      {/* <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt && order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm border-radius' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>*/}\r\n      <Col md={9}>\r\n        <h2>Отзывы</h2>\r\n\r\n        {product.reviews.map((review) => (\r\n          <ListGroup.Item key={review._id} className='list-group-item-dark'>\r\n            <strong>{review.name}</strong>\r\n            <div className='my-2'>\r\n              <Rating value={review.rating} />\r\n            </div>\r\n            <p>{review.createdAt.substring(0, 10)}</p>\r\n            <p>{review.comment}</p>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProductScreen.js",["246","247","248","249","250"],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\HomeScreen.js",["251","252","253","254"],"import React, { useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Alert from '../components/Alert'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match, history }) => {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, product, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {!keyword && <ProductCarousel />}\r\n        <h1 className='pt-4'>Котята</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              {products.map((product) => (\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            {/* <div className='portfolio__labels'>\r\n              <a\r\n                href='/#'\r\n                active={filter === 'all'}\r\n                onClick={({ submitHandler }) => setFilter('all')}\r\n              >\r\n                All\r\n              </a>\r\n              <a\r\n                href='/#'\r\n                active={filter === 'Airpods Wireless Bluetooth Headphones'}\r\n                onClick={() =>\r\n                  setFilter('Airpods Wireless Bluetooth Headphones')\r\n                }\r\n              >\r\n                Airpods Wireless Bluetooth Headphones\r\n              </a>\r\n              <a\r\n                href='/#'\r\n                active={filter === 'mobile'}\r\n                onClick={() => setFilter('mobile')}\r\n              >\r\n                Mobile\r\n              </a>\r\n              <a\r\n                href='/#'\r\n                active={filter === 'ux-ui'}\r\n                onClick={() => setFilter('ux-ui')}\r\n              >\r\n                UX/UI\r\n              </a>\r\n              <a\r\n                href='/#'\r\n                active={filter === 'others'}\r\n                onClick={() => setFilter('others')}\r\n              >\r\n                Others\r\n              </a>\r\n            </div>\r\n\r\n           <div className='portfolio__container'>\r\n              {productsFilter.map((product) =>\r\n                product.filtered === true ? (\r\n                  <span key={product.name}>{product.name}</span>\r\n                ) : (\r\n                  'none'\r\n                )\r\n              )}\r\n            </div> */}\r\n            <Paginate\r\n              pages={pages}\r\n              page={page}\r\n              keyword={keyword ? keyword : ''}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\LoginScreen.js",["255"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport loginImg from '../Images/illustrations/clip-sign-in.png'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className='text-center'>Welcome back</h1>\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      {loading && <Loader />}\r\n      <img src={loginImg} className='w-100' />\r\n      <h2>We're so excited to see you again!</h2>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email addres</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter email'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link\r\n            to={\r\n              redirect\r\n                ? `/seller-register?redirect=${redirect}`\r\n                : '/seller-register'\r\n            }\r\n          >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\OrderScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SlideEditScreen.js",["256"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listSlidesDetails, updateSlide } from '../actions/sliderActions'\r\nimport { SLIDE_UPDATE_RESET } from '../constants/sliderConstants'\r\n\r\nconst SlideEditScreen = ({ match, history }) => {\r\n  const sliderId = match.params.id\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [secondTitle, setSecondTitle] = useState('')\r\n  const [link, setLink] = useState('')\r\n  const [button, setButton] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const slidesDetails = useSelector((state) => state.slidesDetails)\r\n  const { loading, error, slide } = slidesDetails\r\n\r\n  const slidesList = useSelector((state) => state.slidesList)\r\n  const { slides } = slidesList\r\n\r\n  const slideUpdate = useSelector((state) => state.slideUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = slideUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: SLIDE_UPDATE_RESET })\r\n      history.push('/admin/slidelist')\r\n    } else {\r\n      if (!slides.title || slides._id !== sliderId) {\r\n        dispatch(listSlidesDetails(sliderId))\r\n      } else {\r\n        setTitle(slides.title)\r\n        setSecondTitle(slides.secondTitle)\r\n        setLink(slides.link)\r\n        setButton(slides.button)\r\n        setImage(slides.image)\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    sliderId,\r\n    slides._id,\r\n    slides.title,\r\n    slides.secondTitle,\r\n    slides.link,\r\n    slides.button,\r\n    slides.image,\r\n    successUpdate,\r\n  ])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateSlide({\r\n        _id: sliderId,\r\n        title,\r\n        secondTitle,\r\n        link,\r\n        button,\r\n        image,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/slidelist' className='btn btn-light my-3'>\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Slide</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Alert variant='danger'>{error}</Alert>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Alert variant='danger'>{error}</Alert>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='title'>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter title'\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='secondTitle'>\r\n              <Form.Label>Second title</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter second title'\r\n                value={secondTitle}\r\n                onChange={(e) => setSecondTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='link'>\r\n              <Form.Label>Link</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter link'\r\n                value={link}\r\n                onChange={(e) => setLink(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='button'>\r\n              <Form.Label>Button</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter button link'\r\n                value={button}\r\n                onChange={(e) => setButton(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SlideEditScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SlidesListScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerVerificationScreen.js",["257"],"import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport signupImg from '../Images/illustrations/clip-sign-up.png'\r\n\r\nconst SellerVerificationScreen = (location, history) => {\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\r\n\r\n  return (\r\n  \r\n    <FormContainer>\r\n      <h1 className='text-center'>Sign Up</h1>\r\n      <img src={signupImg} className='w-100' />\r\n      <div className='text-center'>\r\n      <h2 className='align-center line-height'>Ваша заявка на регистрацию аккаунта продавца рассматривается</h2>\r\n      \r\n      <LinkContainer to={\r\n              redirect\r\n                ? `/?redirect=${redirect}`\r\n                : '/'\r\n            }>\r\n      <Button type='submit' variant='primary'>\r\n          \r\n        \r\n          Посмотреть объявления\r\n          </Button>\r\n          </LinkContainer>\r\n           </div>\r\n      </FormContainer>\r\n   \r\n      )\r\n}\r\n\r\nexport default SellerVerificationScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\RegisterSellerScreen.js",["258"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { newSellerRegister } from '../actions/userActions'\r\nimport signupImg from '../Images/illustrations/clip-sign-up.png'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [login, setLogin] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [socialMedia1, setSocialMedia1] = useState('')\r\n  const [socialMedia2, setSocialMedia2] = useState('')\r\n  const [socialMedia3, setSocialMedia3] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [experience, setExperience] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const sellerRegister = useSelector((state) => state.sellerRegister)\r\n  const { loading, error, userInfo } = sellerRegister\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/sellerVerificationScreen')\r\n    }\r\n  }, [history, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(\r\n        newSellerRegister(\r\n          login,\r\n          name,\r\n          email,\r\n          password,\r\n          socialMedia1,\r\n          socialMedia2,\r\n          socialMedia3,\r\n          description,\r\n          experience\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className='text-center'>Регистрация</h1>\r\n      {message && <Alert variant='danger'>{message}</Alert>}\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      {loading && <Loader />}\r\n      <img src={signupImg} className='w-100' />\r\n      <h2>Зарегистрируйтесь для размещения объявления</h2>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='login'>\r\n          <Form.Label>Логин</Form.Label>\r\n          <Form.Control\r\n            type='login'\r\n            placeholder='Укажите логин'\r\n            value={login}\r\n            onChange={(e) => setLogin(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Имя</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Введите ваше имя'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Введите ваш email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Пароль</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Введите ваш пароль'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Подтвердить пароль</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Подтвердите пароль'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='socialMedia1'>\r\n          <Form.Label>\r\n            Укажите ссылку на вашу соц.сеть для подтверждения\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Ссылка на вашу соц.сеть'\r\n            value={socialMedia1}\r\n            onChange={(e) => setSocialMedia1(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='socialMedia2'>\r\n          <Form.Label>\r\n            Укажите ссылку на другую вашу соц.сеть для подтверждения\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Ссылка на вашу соц.сеть'\r\n            value={socialMedia2}\r\n            onChange={(e) => setSocialMedia2(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='socialMedia3'>\r\n          <Form.Label>\r\n            Укажите ссылку на другую вашу соц.сеть для подтверждения\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Ссылка на вашу соц.сеть'\r\n            value={socialMedia3}\r\n            onChange={(e) => setSocialMedia3(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='description'>\r\n          <Form.Label>Расскажите немного о себе</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Расскажите немного о себе'\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='experience'>\r\n          <Form.Label>Сколько лет занимаетесь разведением?</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Сколько лет занимаетесь разведением'\r\n            value={experience}\r\n            onChange={(e) => setExperience(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Зарегистрироваться\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          У вас есть аккаунт? <Link to={'/login'}>Войти</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerScreen.js",["259"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport axios from 'axios'\r\nimport {\r\n  listProducts,\r\n  SellerDeleteProduct,\r\n  createProduct,\r\n  sellerCreateProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstans'\r\n\r\nconst SellerScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n  const [sellerProducts, setSellerProducts] = useState([])\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const sellerProductCreate = useSelector((state) => state.sellerProductCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = sellerProductCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isSeller) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const userInfoS = localStorage.getItem('userInfo')\r\n    const userDataS = JSON.parse(userInfoS)\r\n    let token\r\n    if (userDataS !== null) {\r\n      token = userDataS.token\r\n    }\r\n    axios\r\n      .get(`/api/products/seller/products`, {\r\n        headers: {\r\n          authorization: 'Bearer ' + token,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setSellerProducts(response.data.products)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n    if (successCreate) {\r\n      history.push(`/seller/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(sellerCreateProduct())\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(SellerDeleteProduct(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Питомцы</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Добавить питомца\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Alert variant='danger'>{errorDelete}</Alert>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Alert variant='danger'>{errorCreate}</Alert>}\r\n      {products.length === 0 && <Alert>Your cart is empty</Alert>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Имя</th>\r\n                <th>Цена</th>\r\n                <th>Категория</th>\r\n                <th>Гендер</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sellerProducts.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>$ {product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.gender}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/seller/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm fit'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm fit'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SellerScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerProductEditScreen.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProductListScreen.js",["260"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstans'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Питомцы</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          {/* <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button> */}\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Alert variant='danger'>{errorDelete}</Alert>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Alert variant='danger'>{errorCreate}</Alert>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Имя</th>\r\n                <th>Цена</th>\r\n                <th>Категория</th>\r\n                <th>Гендер</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>$ {product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.gender}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm fit'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm fit'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\ProductEditScreen.js",["261","262","263","264","265"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, SellerUpdateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstans'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [type, setType] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [parentImage, setParentImage] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [gender, setGender] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [breedCode, setBreedCode] = useState('')\r\n  const [colorCode, setColorCode] = useState('')\r\n  const [isPet, setIsPet] = useState(false)\r\n  const [breedingPrice, setBreedingPrice] = useState(0)\r\n  const [defects, setDefects] = useState('')\r\n  const [weight, setWeight] = useState(0)\r\n  const [birthdate, setBirthdate] = useState(0)\r\n  const [vaccination, setVaccination] = useState('')\r\n  const [city, setCity] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setType(product.type)\r\n        setName(product.name)\r\n        setImage(product.image)\r\n        setParentImage(product.parentImage)\r\n        setPrice(product.price)\r\n        setGender(product.gender)\r\n        setDescription(product.description)\r\n        setBreedCode(product.breedCode)\r\n        setColorCode(product.colorCode)\r\n        setIsPet(product.isPet)\r\n        setBreedingPrice(product.breedingPrice)\r\n        setDefects(product.defects)\r\n        setWeight(product.weight)\r\n        setBirthdate(product.birthdate)\r\n        setVaccination(product.vaccination)\r\n        setCity(product.city)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      SellerUpdateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        description,\r\n        type,\r\n        name,\r\n        image,\r\n        parentImage,\r\n        price,\r\n        gender,\r\n        description,\r\n        breedCode,\r\n        colorCode,\r\n        isPet,\r\n        breedingPrice,\r\n        defects,\r\n        weight,\r\n        birthdate,\r\n        vaccination,\r\n        city,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Alert variant='danger'>{error}</Alert>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Alert variant='danger'>{error}</Alert>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Кличка</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Укажите кличку'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='type'>\r\n              <Form.Label>Вид животного</Form.Label>\r\n              <Form.Control\r\n                type='type'\r\n                placeholder='Укажите вид животного'\r\n                value={type}\r\n                onChange={(e) => setType(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Цена</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Укажите цену'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='gender'>\r\n              <Form.Label>Пол</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Укажите пол'\r\n                value={gender}\r\n                onChange={(e) => setGender(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Фото питомца</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Введите ссылку на фото'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='parentImage'>\r\n              <Form.Label>Фото родителей</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Введите ссылку на фото'\r\n                value={parentImage}\r\n                onChange={(e) => setParentImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Описание</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Введите описание'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='breedCode'>\r\n              <Form.Label>Код породы</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Укажите код породы'\r\n                value={breedCode}\r\n                onChange={(e) => setBreedCode(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='colorCode'>\r\n              <Form.Label>Код окраса</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Укажите код окраса'\r\n                value={colorCode}\r\n                onChange={(e) => setColorCode(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isPet'>\r\n              <Form.Label>Это питомец или в разведение?</Form.Label>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='В разведение'\r\n                checked={isPet}\r\n                onChange={(e) => setIsPet(e.target.checked, !isPet)}\r\n                checked={isPet}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            {isPet ? (\r\n              <Form.Group controlId='breedingPrice'>\r\n                <Form.Label>Цена в разведение</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Укажите цена в разведение'\r\n                  value={breedingPrice}\r\n                  onChange={(e) => setBreedingPrice(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            ) : null}\r\n\r\n            <Form.Group controlId='defects'>\r\n              <Form.Label>Дефекты</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Есть ли какие-то дефекты у питомца?'\r\n                value={defects}\r\n                onChange={(e) => setDefects(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='weight'>\r\n              <Form.Label>Вес</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Укажите вес'\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='birthdate'>\r\n              <Form.Label>Дата рождения</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Укажите дату рождения'\r\n                value={birthdate}\r\n                onChange={(e) => setBirthdate(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='vaccination'>\r\n              <Form.Label>Есть ли прививки, если есть укажите даты</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Укажите даты прививки'\r\n                value={vaccination}\r\n                onChange={(e) => setVaccination(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city'>\r\n              <Form.Label>Укажите город, в котором продате питомца</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Укажите даты прививки'\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Добавить\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\orderRedusers.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\sliderReducers.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\SellerProfileScreen.js",["266","267","268","269","270","271"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst SellerProfileScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  useEffect(() => {\r\n    if (!user.name || user._id !== userId) {\r\n      dispatch(getUserDetails(userId))\r\n    }\r\n  }, [dispatch, history, userId, user])\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>User account</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Alert variant='danger'>{error}</Alert>\r\n        ) : (\r\n          <ListGroup>\r\n            <ListGroup.Item>{user.id}</ListGroup.Item>\r\n          </ListGroup>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SellerProfileScreen\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\reducers\\userReducers.js",["272"],"import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstans'\r\nimport {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCCESS,\r\n  SELLER_REGISTER_REQUEST,\r\n  SELLER_REGISTER_SUCCESS,\r\n  SELLER_REGISTER_FAIL,\r\n  // CREATE_SELLER_REVIEW_REQUEST,\r\n  // CREATE_SELLER_REVIEW_SUCCESS,\r\n  // CREATE_SELLER_REVIEW_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sellerRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SELLER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case SELLER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case SELLER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDitailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// export const sellerReviewCreateReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case CREATE_SELLER_REVIEW_REQUEST:\r\n//       return { loading: true }\r\n//     case CREATE_SELLER_REVIEW_SUCCESS:\r\n//       return { loading: false, success: true }\r\n//     case CREATE_SELLER_REVIEW_FAIL:\r\n//       return { loading: false, error: action.payload }\r\n//     case PRODUCT_CREATE_REVIEW_RESET:\r\n//       return {}\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Message.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Alert.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\SearchBox.js",[],["273","274"],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\DarkToggle.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Product.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\productConstans.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\sliderConstants.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\actions\\sliderActions.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\components\\ProductCarousel.js",["275"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Alert from './Alert'\r\nimport { listSlides } from '../actions/sliderActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const slidesList = useSelector((state) => state.slidesList)\r\n  const { loading, error, slides } = slidesList\r\n\r\n  const slidesDetails = useSelector((state) => state.slidesDetails)\r\n  const { slide } = slidesDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listSlides())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Alert varaint='danger'>{error}</Alert>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {slides.map((slide) => (\r\n        <Carousel.Item key={slide._id}>\r\n          <Link to={`/product/${slide.link}`}>\r\n            <Image src={slide.image} alt={slide.title} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>{slide.title}</h2>\r\n              <p className='text-dark py-3'>{slide.secondTitle}</p>\r\n              <div className='carousel-inline-btn carousel-btns'>\r\n                <Link to={`/product/${slide.link}`}>\r\n                  <span className='mr-3'>Learn more</span>\r\n                </Link>\r\n                <button className='btn-primary'>Shop now</button>\r\n              </div>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","C:\\Users\\gover\\Desktop\\petshop-react-app\\frontend\\src\\screens\\AboutUs.js",["276","277","278","279","280","281","282","283"],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":18},{"ruleId":"288","severity":1,"message":"292","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":22},{"ruleId":"288","severity":1,"message":"293","line":12,"column":8,"nodeType":"290","messageId":"291","endLine":12,"endColumn":21},{"ruleId":"288","severity":1,"message":"294","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":24},{"ruleId":"288","severity":1,"message":"295","line":14,"column":8,"nodeType":"290","messageId":"291","endLine":14,"endColumn":19},{"ruleId":"288","severity":1,"message":"296","line":15,"column":8,"nodeType":"290","messageId":"291","endLine":15,"endColumn":23},{"ruleId":"288","severity":1,"message":"297","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"298","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":15},{"ruleId":"288","severity":1,"message":"299","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":23},{"ruleId":"288","severity":1,"message":"300","line":34,"column":20,"nodeType":"290","messageId":"291","endLine":34,"endColumn":33},{"ruleId":"288","severity":1,"message":"301","line":34,"column":42,"nodeType":"290","messageId":"291","endLine":34,"endColumn":53},{"ruleId":"288","severity":1,"message":"302","line":34,"column":55,"nodeType":"290","messageId":"291","endLine":34,"endColumn":61},{"ruleId":"288","severity":1,"message":"303","line":8,"column":3,"nodeType":"290","messageId":"291","endLine":8,"endColumn":8},{"ruleId":"288","severity":1,"message":"304","line":10,"column":3,"nodeType":"290","messageId":"291","endLine":10,"endColumn":7},{"ruleId":"288","severity":1,"message":"305","line":28,"column":15,"nodeType":"290","messageId":"291","endLine":28,"endColumn":21},{"ruleId":"288","severity":1,"message":"306","line":38,"column":11,"nodeType":"290","messageId":"291","endLine":38,"endColumn":15},{"ruleId":"288","severity":1,"message":"307","line":67,"column":9,"nodeType":"290","messageId":"291","endLine":67,"endColumn":25},{"ruleId":"288","severity":1,"message":"297","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"308","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":15},{"ruleId":"288","severity":1,"message":"309","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":13},{"ruleId":"288","severity":1,"message":"310","line":20,"column":37,"nodeType":"290","messageId":"291","endLine":20,"endColumn":44},{"ruleId":"311","severity":1,"message":"312","line":38,"column":7,"nodeType":"313","endLine":38,"endColumn":47},{"ruleId":"288","severity":1,"message":"314","line":25,"column":27,"nodeType":"290","messageId":"291","endLine":25,"endColumn":32},{"ruleId":"311","severity":1,"message":"312","line":16,"column":7,"nodeType":"313","endLine":16,"endColumn":48},{"ruleId":"311","severity":1,"message":"312","line":62,"column":7,"nodeType":"313","endLine":62,"endColumn":48},{"ruleId":"288","severity":1,"message":"315","line":12,"column":3,"nodeType":"290","messageId":"291","endLine":12,"endColumn":16},{"ruleId":"288","severity":1,"message":"316","line":63,"column":9,"nodeType":"290","messageId":"291","endLine":63,"endColumn":29},{"ruleId":"317","severity":1,"message":"318","line":106,"column":9,"nodeType":"319","messageId":"320","endLine":106,"endColumn":13},{"ruleId":"317","severity":1,"message":"321","line":107,"column":9,"nodeType":"319","messageId":"320","endLine":107,"endColumn":14},{"ruleId":"317","severity":1,"message":"322","line":109,"column":9,"nodeType":"319","messageId":"320","endLine":109,"endColumn":14},{"ruleId":"317","severity":1,"message":"323","line":111,"column":9,"nodeType":"319","messageId":"320","endLine":111,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":251,"column":17,"nodeType":"326","endLine":251,"endColumn":32},{"ruleId":"288","severity":1,"message":"297","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"327","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":14},{"ruleId":"288","severity":1,"message":"328","line":3,"column":16,"nodeType":"290","messageId":"291","endLine":3,"endColumn":22},{"ruleId":"288","severity":1,"message":"329","line":3,"column":35,"nodeType":"290","messageId":"291","endLine":3,"endColumn":48},{"ruleId":"288","severity":1,"message":"330","line":8,"column":26,"nodeType":"290","messageId":"291","endLine":8,"endColumn":36},{"ruleId":"288","severity":1,"message":"331","line":9,"column":10,"nodeType":"290","messageId":"291","endLine":9,"endColumn":27},{"ruleId":"288","severity":1,"message":"332","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"284","replacedBy":"333"},{"ruleId":"286","replacedBy":"334"},{"ruleId":"288","severity":1,"message":"314","line":16,"column":11,"nodeType":"290","messageId":"291","endLine":16,"endColumn":16},{"ruleId":"288","severity":1,"message":"335","line":3,"column":3,"nodeType":"290","messageId":"291","endLine":3,"endColumn":6},{"ruleId":"288","severity":1,"message":"303","line":5,"column":3,"nodeType":"290","messageId":"291","endLine":5,"endColumn":8},{"ruleId":"288","severity":1,"message":"336","line":6,"column":3,"nodeType":"290","messageId":"291","endLine":6,"endColumn":12},{"ruleId":"288","severity":1,"message":"304","line":7,"column":3,"nodeType":"290","messageId":"291","endLine":7,"endColumn":7},{"ruleId":"288","severity":1,"message":"328","line":8,"column":3,"nodeType":"290","messageId":"291","endLine":8,"endColumn":9},{"ruleId":"288","severity":1,"message":"327","line":9,"column":3,"nodeType":"290","messageId":"291","endLine":9,"endColumn":7},{"ruleId":"288","severity":1,"message":"337","line":10,"column":3,"nodeType":"290","messageId":"291","endLine":10,"endColumn":11},{"ruleId":"338","severity":1,"message":"339","line":25,"column":9,"nodeType":"313","endLine":25,"endColumn":15},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'CartScreen' is defined but never used.","Identifier","unusedVar","'ShippingScreen' is defined but never used.","'PaymentScreen' is defined but never used.","'PlaceOrderScreen' is defined but never used.","'OrderScreen' is defined but never used.","'OrderListScreen' is defined but never used.","'useState' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","'Image' is defined but never used.","'Card' is defined but never used.","'setQty' is assigned a value but never used.","'user' is assigned a value but never used.","'addToCartHandler' is assigned a value but never used.","'Route' is defined but never used.","'Alert' is defined but never used.","'product' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'slide' is assigned a value but never used.","'createProduct' is defined but never used.","'createProductHandler' is assigned a value but never used.","no-dupe-keys","Duplicate key 'name'.","ObjectExpression","unexpected","Duplicate key 'image'.","Duplicate key 'price'.","Duplicate key 'description'.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Form' is defined but never used.","'Button' is defined but never used.","'ListGroupItem' is defined but never used.","'updateUser' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.",["340"],["341"],"'Row' is defined but never used.","'ListGroup' is defined but never used.","'Carousel' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]